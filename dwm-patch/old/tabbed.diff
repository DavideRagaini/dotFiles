diff --git a/config.def.h b/config.def.h
index 114f693..ceaadd8 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,22 +1,23 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static       char font[]        = "monospace:size=9";
-static       char* normbgcolor  = "#222222";
-static       char* normfgcolor  = "#cccccc";
-static       char* selbgcolor   = "#555555";
-static       char* selfgcolor   = "#ffffff";
-static       char* urgbgcolor   = "#111111";
-static       char* urgfgcolor   = "#cc0000";
-static const char before[]      = "<";
-static const char after[]       = ">";
-static const char titletrim[]   = "...";
-static const int  tabwidth      = 200;
-static const Bool foreground    = True;
-static       Bool urgentswitch  = False;
+static char font[] = "CaskaydiaCove Nerd Font Mono:size=9";
+static char *normbgcolor = "#2f0b3a";
+static char *normfgcolor = "#cc00cc";
+static char *selbgcolor = "#571dc2";
+static char *selfgcolor = "#dddddd";
+static char *urgbgcolor = "#00ffff";
+static char *urgfgcolor = "#ff00ff";
+static const char before[] = "<";
+static const char after[] = ">";
+static const char titletrim[] = "...";
+static const int tabwidth = 200;
+static const Bool foreground = True;
+static Bool urgentswitch = False;
 
 #if BAR_HEIGHT_PATCH
-static const int barheight = 0;  /* 0 means derive by font (default), otherwise absolute height */
+static const int barheight =
+    0; /* 0 means derive by font (default), otherwise absolute height */
 #endif // BAR_HEIGHT_PATCH
 
 /*
@@ -24,111 +25,110 @@ static const int barheight = 0;  /* 0 means derive by font (default), otherwise
  * then the current position is changed + newposition. If npisrelative
  * is False, then newposition is an absolute position.
  */
-static int  newposition   = 0;
-static Bool npisrelative  = False;
+static int newposition = 0;
+static Bool npisrelative = False;
 
-#define SETPROP(p) { \
-        .v = (char *[]){ "/bin/sh", "-c", \
-                "prop=\"`xwininfo -children -id $1 | grep '^     0x' |" \
-                "sed -e's@^ *\\(0x[0-9a-f]*\\) \"\\([^\"]*\\)\".*@\\1 \\2@' |" \
-                "xargs -0 printf %b | dmenu -l 10 -w $1`\" &&" \
-                "xprop -id $1 -f $0 8s -set $0 \"$prop\"", \
-                p, winid, NULL \
-        } \
-}
+#define SETPROP(p)                                                             \
+  {                                                                            \
+    .v = (char *[]) {                                                          \
+      "/bin/sh", "-c",                                                         \
+          "prop=\"`xwininfo -children -id $1 | grep '^     0x' |"              \
+          "sed -e's@^ *\\(0x[0-9a-f]*\\) \"\\([^\"]*\\)\".*@\\1 \\2@' |"       \
+          "xargs -0 printf %b | dmenu -l 10 -w $1`\" &&"                       \
+          "xprop -id $1 -f $0 8s -set $0 \"$prop\"",                           \
+          p, winid, NULL                                                       \
+    }                                                                          \
+  }
 
 #if XRESOURCES_PATCH
 /*
  * Xresources preferences to load at startup
  */
 ResourcePref resources[] = {
-	{ "font",         STRING,  &font },
-	{ "color0",       STRING,  &normbgcolor },
-	{ "color4",       STRING,  &normfgcolor },
-	{ "color4",       STRING,  &selbgcolor },
-	{ "color7",       STRING,  &selfgcolor },
-	{ "color2",       STRING,  &urgbgcolor },
-	{ "color3",       STRING,  &urgfgcolor },
+    {"font", STRING, &font},          {"color0", STRING, &normbgcolor},
+    {"color4", STRING, &normfgcolor}, {"color4", STRING, &selbgcolor},
+    {"color7", STRING, &selfgcolor},  {"color2", STRING, &urgbgcolor},
+    {"color3", STRING, &urgfgcolor},
 };
 #endif // XRESOURCES_PATCH
 
 #define MODKEY ControlMask
 #if KEYCODE_PATCH
 static Key keys[] = {
-	/* modifier             key           function     argument */
-	{ MODKEY|ShiftMask,     36,           focusonce,   { 0 } },
-	{ MODKEY|ShiftMask,     36,           spawn,       { 0 } },
-	{ MODKEY|ShiftMask,     46,           rotate,      { .i = +1 } },
-	{ MODKEY|ShiftMask,     43,           rotate,      { .i = -1 } },
-	{ MODKEY|ShiftMask,     44,           movetab,     { .i = -1 } },
-	{ MODKEY|ShiftMask,     45,           movetab,     { .i = +1 } },
-	{ MODKEY,               23,           rotate,      { .i = 0 } },
-	{ MODKEY,               49,           spawn,       SETPROP("_TABBED_SELECT_TAB") },
-	{ MODKEY,               10,           move,        { .i = 0 } },
-	{ MODKEY,               11,           move,        { .i = 1 } },
-	{ MODKEY,               12,           move,        { .i = 2 } },
-	{ MODKEY,               13,           move,        { .i = 3 } },
-	{ MODKEY,               14,           move,        { .i = 4 } },
-	{ MODKEY,               15,           move,        { .i = 5 } },
-	{ MODKEY,               16,           move,        { .i = 6 } },
-	{ MODKEY,               17,           move,        { .i = 7 } },
-	{ MODKEY,               18,           move,        { .i = 8 } },
-	{ MODKEY,               19,           move,        { .i = 9 } },
-	{ MODKEY,               24,           killclient,  { 0 } },
-	{ MODKEY,               30,           focusurgent, { .v = NULL } },
-	{ MODKEY|ShiftMask,     30,           toggle,      { .v = (void*) &urgentswitch } },
-	{ 0,                    95,           fullscreen,  { 0 } },
-	#if HIDETABS_PATCH
-	{ MODKEY,               50,           showbar,     { .i = 1 } },
-	{ ShiftMask,            37,           showbar,     { .i = 1 } },
-	#endif // HIDETABS_PATCH
+    /* modifier             key           function     argument */
+    {MODKEY | ShiftMask, 36, focusonce, {0}},
+    {MODKEY | ShiftMask, 36, spawn, {0}},
+    {MODKEY | ShiftMask, 46, rotate, {.i = +1}},
+    {MODKEY | ShiftMask, 43, rotate, {.i = -1}},
+    {MODKEY | ShiftMask, 44, movetab, {.i = -1}},
+    {MODKEY | ShiftMask, 45, movetab, {.i = +1}},
+    {MODKEY, 23, rotate, {.i = 0}},
+    {MODKEY, 49, spawn, SETPROP("_TABBED_SELECT_TAB")},
+    {MODKEY, 10, move, {.i = 0}},
+    {MODKEY, 11, move, {.i = 1}},
+    {MODKEY, 12, move, {.i = 2}},
+    {MODKEY, 13, move, {.i = 3}},
+    {MODKEY, 14, move, {.i = 4}},
+    {MODKEY, 15, move, {.i = 5}},
+    {MODKEY, 16, move, {.i = 6}},
+    {MODKEY, 17, move, {.i = 7}},
+    {MODKEY, 18, move, {.i = 8}},
+    {MODKEY, 19, move, {.i = 9}},
+    {MODKEY, 24, killclient, {0}},
+    {MODKEY, 30, focusurgent, {.v = NULL}},
+    {MODKEY | ShiftMask, 30, toggle, {.v = (void *)&urgentswitch}},
+    {0, 95, fullscreen, {0}},
+#if HIDETABS_PATCH
+    {MODKEY, 50, showbar, {.i = 1}},
+    {ShiftMask, 37, showbar, {.i = 1}},
+#endif // HIDETABS_PATCH
 };
 #else
 static Key keys[] = {
-	/* modifier             key           function     argument */
-	{ MODKEY|ShiftMask,     XK_Return,    focusonce,   { 0 } },
-	{ MODKEY|ShiftMask,     XK_Return,    spawn,       { 0 } },
+    /* modifier             key           function     argument */
+    {MODKEY | ShiftMask, XK_Return, focusonce, {0}},
+    {MODKEY | ShiftMask, XK_Return, spawn, {0}},
 
-	{ MODKEY|ShiftMask,     XK_l,         rotate,      { .i = +1 } },
-	{ MODKEY|ShiftMask,     XK_h,         rotate,      { .i = -1 } },
-	{ MODKEY|ShiftMask,     XK_j,         movetab,     { .i = -1 } },
-	{ MODKEY|ShiftMask,     XK_k,         movetab,     { .i = +1 } },
-	{ MODKEY,               XK_Tab,       rotate,      { .i = 0 } },
+    {MODKEY | ShiftMask, XK_l, rotate, {.i = +1}},
+    {MODKEY | ShiftMask, XK_h, rotate, {.i = -1}},
+    {MODKEY | ShiftMask, XK_j, movetab, {.i = -1}},
+    {MODKEY | ShiftMask, XK_k, movetab, {.i = +1}},
+    {MODKEY, XK_Tab, rotate, {.i = 0}},
 
-	{ MODKEY,               XK_grave,     spawn,       SETPROP("_TABBED_SELECT_TAB") },
-	{ MODKEY,               XK_1,         move,        { .i = 0 } },
-	{ MODKEY,               XK_2,         move,        { .i = 1 } },
-	{ MODKEY,               XK_3,         move,        { .i = 2 } },
-	{ MODKEY,               XK_4,         move,        { .i = 3 } },
-	{ MODKEY,               XK_5,         move,        { .i = 4 } },
-	{ MODKEY,               XK_6,         move,        { .i = 5 } },
-	{ MODKEY,               XK_7,         move,        { .i = 6 } },
-	{ MODKEY,               XK_8,         move,        { .i = 7 } },
-	{ MODKEY,               XK_9,         move,        { .i = 8 } },
-	{ MODKEY,               XK_0,         move,        { .i = 9 } },
+    {MODKEY, XK_grave, spawn, SETPROP("_TABBED_SELECT_TAB")},
+    {MODKEY, XK_1, move, {.i = 0}},
+    {MODKEY, XK_2, move, {.i = 1}},
+    {MODKEY, XK_3, move, {.i = 2}},
+    {MODKEY, XK_4, move, {.i = 3}},
+    {MODKEY, XK_5, move, {.i = 4}},
+    {MODKEY, XK_6, move, {.i = 5}},
+    {MODKEY, XK_7, move, {.i = 6}},
+    {MODKEY, XK_8, move, {.i = 7}},
+    {MODKEY, XK_9, move, {.i = 8}},
+    {MODKEY, XK_0, move, {.i = 9}},
 
-	{ MODKEY,               XK_q,         killclient,  { 0 } },
+    {MODKEY, XK_q, killclient, {0}},
 
-	{ MODKEY,               XK_u,         focusurgent, { 0 } },
-	{ MODKEY|ShiftMask,     XK_u,         toggle,      { .v = (void*) &urgentswitch } },
+    {MODKEY, XK_u, focusurgent, {0}},
+    {MODKEY | ShiftMask, XK_u, toggle, {.v = (void *)&urgentswitch}},
 
-	{ 0,                    XK_F11,       fullscreen,  { 0 } },
-	#if HIDETABS_PATCH
-	{ MODKEY,               XK_Shift_L,   showbar,     { .i = 1 } },
-	{ ShiftMask,            XK_Control_L, showbar,     { .i = 1 } },
-	#endif // HIDETABS_PATCH
+    {0, XK_F11, fullscreen, {0}},
+#if HIDETABS_PATCH
+    {MODKEY, XK_Shift_L, showbar, {.i = 1}},
+    {ShiftMask, XK_Control_L, showbar, {.i = 1}},
+#endif // HIDETABS_PATCH
 };
 #endif // KEYCODE_PATCH
 
 #if KEYRELEASE_PATCH
 static Key keyreleases[] = {
-	/* modifier             key             function     argument */
-	#if HIDETABS_PATCH
-	{ MODKEY|ShiftMask,     XK_Shift_L,     showbar,     { .i = 0 } },
-	{ MODKEY|ShiftMask,     XK_Control_L,   showbar,     { .i = 0 } },
-	#else
-	{ 0,                    XK_Shift_L,     NULL,        { 0 } },
-	#endif // HIDETABS_PATCH
+/* modifier             key             function     argument */
+#if HIDETABS_PATCH
+    {MODKEY | ShiftMask, XK_Shift_L, showbar, {.i = 0}},
+    {MODKEY | ShiftMask, XK_Control_L, showbar, {.i = 0}},
+#else
+    {0, XK_Shift_L, NULL, {0}},
+#endif // HIDETABS_PATCH
 
 };
-#endif // KEYRELEASE_PATCH
\ No newline at end of file
+#endif // KEYRELEASE_PATCH
diff --git a/patches.def.h b/patches.def.h
index fd0fe10..cd6d1e2 100644
--- a/patches.def.h
+++ b/patches.def.h
@@ -10,8 +10,8 @@
 /* Patches */
 
 /* This patch allows tabbed to handle windows with transparency.
- * You need to uncomment the corresponding line in config.mk to use the -lXrender library
- * when including this patch.
+ * You need to uncomment the corresponding line in config.mk to use the
+ * -lXrender library when including this patch.
  * https://tools.suckless.org/tabbed/patches/alpha/
  */
 #define ALPHA_PATCH 0
@@ -19,49 +19,50 @@
 /* This patch hides the tab bar if only one tab is open.
  * https://tools.suckless.org/tabbed/patches/autohide/
  */
-#define AUTOHIDE_PATCH 0
+#define AUTOHIDE_PATCH 1
 
 /* This patch allows the height of the bar to be manually specified.
  * https://tools.suckless.org/tabbed/patches/bar-height/
  */
-#define BAR_HEIGHT_PATCH 0
+#define BAR_HEIGHT_PATCH 1
 
 /* This patch moves the tabs / bar to the bottom of the tabbed window.
  * https://github.com/bakkeby/patches/blob/master/tabbed/tabbed-bottomtabs-0.6-20200512-dabf6a2.diff
  */
-#define BOTTOM_TABS_PATCH 0
+#define BOTTOM_TABS_PATCH 1
 
 /* This patch centers the tab text.
  * https://www.reddit.com/r/suckless/comments/oi4zjl/tabbed_text_alignment/
  * https://github.com/bakkeby/patches/blob/master/tabbed/tabbed-center-0.6-20200512-dabf6a2.diff
  */
-#define CENTER_PATCH 0
+#define CENTER_PATCH 1
 
 /* This patch prints the position number of the client before the window title.
  * https://tools.suckless.org/tabbed/patches/clientnumber/
  */
-#define CLIENTNUMBER_PATCH 0
+#define CLIENTNUMBER_PATCH 1
 
-/* This patch hides all the tabs and only shows them when Mod+Shift is pressed. All functions
- * with switching, rotating, and creating tabs involve Mod+Shift. When not doing one of these
- * functions, visibility of the tabs is not needed.
- * This patch relies on the keyrelease patch to support show/hide on keypress/keyrelease.
- * https://tools.suckless.org/tabbed/patches/hidetabs/
+/* This patch hides all the tabs and only shows them when Mod+Shift is pressed.
+ * All functions with switching, rotating, and creating tabs involve Mod+Shift.
+ * When not doing one of these functions, visibility of the tabs is not needed.
+ * This patch relies on the keyrelease patch to support show/hide on
+ * keypress/keyrelease. https://tools.suckless.org/tabbed/patches/hidetabs/
  */
 #define HIDETABS_PATCH 0
 
-/* This patch gives tabbed an icon. This icon is the currently selected tab's icon.
- * If the selected tab has no icon (or no tab is selected), use a (admittedly ugly) default icon.
+/* This patch gives tabbed an icon. This icon is the currently selected tab's
+ * icon. If the selected tab has no icon (or no tab is selected), use a
+ * (admittedly ugly) default icon.
  *
  * This patch supports both the new EWMH (_NET_WM_ICON) and
  * legacy ICCCM (WM_ICON) ways of setting a window's icon.
  *
  * https://tools.suckless.org/tabbed/patches/icon/
  */
-#define ICON_PATCH 0
+#define ICON_PATCH 1
 
-/* With this patch, handling key input is done with keycodes instead of keysyms making
- * the keyboard layout independent.
+/* With this patch, handling key input is done with keycodes instead of keysyms
+ * making the keyboard layout independent.
  * https://tools.suckless.org/tabbed/patches/keycode/
  */
 #define KEYCODE_PATCH 0
@@ -75,4 +76,4 @@
 /* This patch allows tabbed colors to be defined via Xresources.
  * https://tools.suckless.org/tabbed/patches/xresources/
  */
-#define XRESOURCES_PATCH 0
+#define XRESOURCES_PATCH 1
