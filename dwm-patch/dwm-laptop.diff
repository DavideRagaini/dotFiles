--- config.h	2021-08-17 14:04:41.289750506 +0200
+++ config.h.def	2021-07-28 10:41:40.349972457 +0200
@@ -5,23 +5,23 @@
 #define TERMCLASS "St"
 
 /* appearance */
-static unsigned int borderpx  = 2;        /* border pixel of windows */
-static unsigned int snap      = 10;       /* snap pixel */
-static unsigned int gappih    = 10;       /* horiz inner gap between windows */
+static unsigned int borderpx  = 3;        /* border pixel of windows */
+static unsigned int snap      = 32;       /* snap pixel */
+static unsigned int gappih    = 20;       /* horiz inner gap between windows */
 static unsigned int gappiv    = 10;       /* vert inner gap between windows */
 static unsigned int gappoh    = 10;       /* horiz outer gap between windows and screen edge */
-static unsigned int gappov    = 10;       /* vert outer gap between windows and screen edge */
-static int swallowfloating    = 1;        /* 1 means swallow floating windows by default */
+static unsigned int gappov    = 30;       /* vert outer gap between windows and screen edge */
+static int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
 static int smartgaps          = 0;        /* 1 means no outer gap when there is only one window */
 static int showbar            = 1;        /* 0 means no bar */
-static int topbar             = 0;        /* 0 means bottom bar */
-static char *fonts[]          = { "Hack Nerd Font Mono:size=11:antialias=true:autohint=true", "FiraCode Nerd Font Mono:pixelsize=10:antialias=true:autohint=true"  };
-static char normbgcolor[]	= "#2F0B3A";
-static char normbordercolor[]	= "#BD93F9";
-static char normfgcolor[]	= "#cc00cc";
-static char selfgcolor[]	= "#dddddd";
-static char selbordercolor[]	= "#FF00FF";
-static char selbgcolor[]	= "#571dc2";
+static int topbar             = 1;        /* 0 means bottom bar */
+static char *fonts[]          = { "monospace:size=10", "JoyPixels:pixelsize=10:antialias=true:autohint=true"  };
+static char normbgcolor[]           = "#222222";
+static char normbordercolor[]       = "#444444";
+static char normfgcolor[]           = "#bbbbbb";
+static char selfgcolor[]            = "#eeeeee";
+static char selbordercolor[]        = "#770000";
+static char selbgcolor[]            = "#005577";
 static char *colors[][3] = {
        /*               fg           bg           border   */
        [SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
@@ -32,28 +32,16 @@
 	const char *name;
 	const void *cmd;
 } Sp;
-const char *spcmd0[] = {"st", "-n", "sp-trm", "-g", "170x50", "-e", "tmux", "new-session", "-s", "dropdown", NULL };
-const char *spcmd1[] = {"st", "-n", "sp-tlf", "-g", "170x50", "-e", "tlf",  NULL };
-const char *spcmd2[] = {"st", "-n", "sp-clc", "-g",  "60x30", "-e", "bc", "-lq", NULL };
-const char *spcmd3[] = {"st", "-n", "sp-pmx", "-g", "120x20", "-e", "pulsemixer", NULL };
-const char *spcmd4[] = {"st", "-n", "sp-nws", "-g", "150x50", "-e", "newsboat", NULL };
-const char *spcmd5[] = {"st", "-n", "sp-mpl", "-g", "160x50", "-e", "mp", NULL };
-
-const char *spcmd6[] = {"emacs", "--name", "flEmacs", "-g", "210x50", "-f", "org-agenda-list", NULL };
-
+const char *spcmd1[] = {TERMINAL, "-n", "spterm", "-g", "120x34", NULL };
+const char *spcmd2[] = {TERMINAL, "-n", "spcalc", "-f", "monospace:size=16", "-g", "50x20", "-e", "bc", "-lq", NULL };
 static Sp scratchpads[] = {
 	/* name          cmd  */
-	{"sp-trm",	spcmd0},
-	{"sp-tlf",	spcmd1},
-	{"sp-clc",	spcmd2},
-	{"sp-pmx",	spcmd3},
-	{"sp-nws",	spcmd4},
-	{"sp-mpl",	spcmd5},
-	{"flEmacs",	spcmd6},
+	{"spterm",      spcmd1},
+	{"spcalc",      spcmd2},
 };
 
 /* tagging */
-static const char *tags[] = { "1 Ôâ©", "2 ÔÑ†", "3 Óù†", "4 Óùí", "5 Óú™", "6 Óù°", "7 ÔÜú", "8 Óû≥", "9 ÔÄΩ" };
+static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -61,28 +49,17 @@
 	 *	WM_NAME(STRING) = title
 	*/
 	/* class    instance      title       	 tags mask    isfloating   isterminal  noswallow  monitor */
-	{ "LibreWolf",	NULL,		NULL,		1,		0,	0,	0,	-1 },
-	{ "qutebrowser",NULL,		NULL,		1,		0,	0,	0,	-1 },
-	{ NULL,		"emacs",	NULL,		1 << 1,		0,	0,	0,	-1 },
-	{ NULL,		"flEmacs",	NULL,		0,		0,	0,	0,	-1 },
-	{ "TelegramDesktop",NULL,	NULL,		1 << 6,		0,	0,	0,	-1 },
-	{ "mpv",	NULL,		NULL,		1 << 8,		0,	0,	0,	-1 },
-	{ TERMCLASS,	NULL,		NULL,		0,		0,	1,	0,	-1 },
-	{ NULL,		"fzfmenu",	NULL,		0,		1,	1,	0,	-1 },
-	{ NULL,		NULL,		"Event Tester",	0,		0,	0,	1,	-1 },
-	{ NULL,		"sp-trm",	NULL,		SPTAG(0),	1,	1,	0,	-1 },
-	{ NULL,		"sp-tlf",	NULL,		SPTAG(1),	1,	1,	0,	-1 },
-	{ NULL,		"sp-clc",	NULL,		SPTAG(2),	1,	1,	0,	-1 },
-	{ NULL,		"sp-pmx",	NULL,		SPTAG(3),	1,	1,	0,	-1 },
-	{ NULL,		"sp-nws",	NULL,		SPTAG(4),	1,	1,	0,	-1 },
-	{ NULL,		"sp-mpl",	NULL,		SPTAG(5),	1,	1,	0,	-1 },
-	{ NULL,		"flEmacs",	NULL,		SPTAG(6),	1,	0,	0,	-1 },
+	{ "Gimp",     NULL,       NULL,       	    1 << 8,       0,           0,         0,        -1 },
+	{ TERMCLASS,  NULL,       NULL,       	    0,            0,           1,         0,        -1 },
+	{ NULL,       NULL,       "Event Tester",   0,            0,           0,         1,        -1 },
+	{ NULL,      "spterm",    NULL,       	    SPTAG(0),     1,           1,         0,        -1 },
+	{ NULL,      "spcalc",    NULL,       	    SPTAG(1),     1,           1,         0,        -1 },
 };
 
 /* layout(s) */
 static float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
 static int nmaster     = 1;    /* number of clients in master area */
-static int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 #define FORCE_VSPLIT 1  /* nrowgrid layout: force two clients to always split vertically */
 #include "vanitygaps.c"
 static const Layout layouts[] = {
@@ -154,152 +131,158 @@
 #include "shiftview.c"
 
 static Key keys[] = {
-	/* modifier		key		function	argument */
-	STACKKEYS(MODKEY,		focus)
-	STACKKEYS(MODKEY|ShiftMask,	push)
-	/* { MODKEY|ShiftMask,	XK_Escape,	spawn,	SHCMD("") }, */
-	{ MODKEY,		XK_grave,	spawn,	SHCMD("dmenuunicode") },
-	TAGKEYS(	XK_1,	0)
-	TAGKEYS(	XK_2,	1)
-	TAGKEYS(	XK_3,	2)
-	TAGKEYS(	XK_4,	3)
-	TAGKEYS(	XK_5,	4)
-	TAGKEYS(	XK_6,	5)
-	TAGKEYS(	XK_7,	6)
-	TAGKEYS(	XK_8,	7)
-	TAGKEYS(	XK_9,	8)
-	{ MODKEY,	XK_0,	view,		{.ui = ~0 } },
-	{ MODKEY|ShiftMask,	XK_0,		tag,		{.ui = ~0 } },
-	{ MODKEY,		XK_BackSpace,	spawn,		SHCMD("timeOnPc shutdown") },
-	{ MODKEY|ShiftMask,	XK_BackSpace,	spawn,		SHCMD("timeOnPc") },
-
-	/* { MODKEY,		XK_Tab,		swapfocus,	{.i = -1 } }, */
-	{ MODKEY|ShiftMask,	XK_Tab,		view,		{0} },
-	{ MODKEY,		XK_q,		killclient,	{0} },
-	{ MODKEY,		XK_w,		spawn,		SHCMD("qutebrowser") },
-	{ MODKEY|ShiftMask,	XK_w,		spawn,		SHCMD("librewolf") },
-	{ MODKEY,		XK_e,		togglescratch,	{.ui = 6} },
-	{ MODKEY,		XK_r,		togglescratch,	{.ui = 1} },
-	{ MODKEY,		XK_t,		setlayout,	{.v = &layouts[0]} },
-	{ MODKEY|ShiftMask,	XK_t,		setlayout,	{.v = &layouts[1]} },
-	{ MODKEY,		XK_y,		setlayout,	{.v = &layouts[2]} },
-	{ MODKEY|ShiftMask,	XK_y,		setlayout,	{.v = &layouts[3]} },
-	{ MODKEY,		XK_u,		setlayout,	{.v = &layouts[4]} },
-	{ MODKEY|ShiftMask,	XK_u,		setlayout,	{.v = &layouts[5]} },
-	{ MODKEY,		XK_i,		setlayout,	{.v = &layouts[6]} },
-	{ MODKEY|ShiftMask,	XK_i,		setlayout,	{.v = &layouts[7]} },
-	{ MODKEY,		XK_o,		incnmaster,	{.i = +1 } },
-	{ MODKEY|ShiftMask,	XK_o,		incnmaster,	{.i = -1 } },
-	{ MODKEY,		XK_p,		spawn,		SHCMD("dmpv") },
-	{ MODKEY,		XK_bracketleft,		spawn,	SHCMD("dmenuunicode") },
-	/* { MODKEY,		XK_bracketright,	spawn,	SHCMD("") }, */
-	{ MODKEY,		XK_backslash,		view,	{0} },
-
-	{ MODKEY,		XK_a,		togglegaps,	{0} },
-	{ MODKEY|ShiftMask,	XK_a,		defaultgaps,	{0} },
-	{ MODKEY,		XK_s,		togglesticky,	{0} },
-	{ MODKEY,		XK_d,		spawn,		SHCMD("dmenu_run") },
-	{ MODKEY|ShiftMask,	XK_d,		spawn,		SHCMD("via") },
-	{ MODKEY,		XK_f,		togglefullscr,	{0} },
-	{ MODKEY|ShiftMask,	XK_f,		setlayout,	{.v = &layouts[8]} },
-	{ MODKEY,		XK_g,		shiftview,	{ .i = -1 } },
-	{ MODKEY|ShiftMask,	XK_g,		shifttag,	{ .i = -1 } },
-	{ MODKEY,		XK_h,		setmfact,	{.f = -0.05} },
-
-	{ MODKEY,		XK_l,		setmfact,	{.f = +0.05} },
-	{ MODKEY,		XK_semicolon,	shiftview,	{ .i = 1 } },
-	{ MODKEY|ShiftMask,	XK_semicolon,	shifttag,	{ .i = 1 } },
-	{ MODKEY,		XK_apostrophe,	togglescratch,	{.ui = 2} },
-	{ MODKEY,		XK_Return,	togglescratch,	{.ui = 0 } },
-	{ MODKEY|ShiftMask,	XK_Return,	spawn,		{.v = termcmd } },
-
-	{ MODKEY,		XK_z,		incrgaps,	{.i = +3 } },
-	{ MODKEY,		XK_x,		incrgaps,	{.i = -3 } },
-	{ MODKEY,		XK_c,		spawn,		SHCMD("clip-file") },
-	/* { MODKEY,		XK_v,		spawn,		SHCMD("") }, */
-	{ MODKEY,		XK_b,		togglebar,	{0} },
-	{ MODKEY,		XK_n,		togglescratch,	{.ui = 4} },
-	{ MODKEY,		XK_m,		togglescratch,	{.ui = 5} },
-	{ MODKEY|ShiftMask,	XK_m,		spawn,		SHCMD("pkill spotifyd; pkill spotify-tui") },
-	{ MODKEY,		XK_comma,	spawn,		SHCMD("dmpc toggle") },
-	{ MODKEY,		XK_period,	spawn,		SHCMD("tppctl play-pause") },
-
-	{ MODKEY,		XK_Left,	focusmon,	{.i = -1 } },
-	{ MODKEY|ShiftMask,	XK_Left,	tagmon,		{.i = -1 } },
-	{ MODKEY,		XK_Right,	focusmon,	{.i = +1 } },
-	{ MODKEY|ShiftMask,	XK_Right,	tagmon,		{.i = +1 } },
-
-	{ MODKEY,		XK_Page_Up,	shiftview,	{ .i = -1 } },
-	{ MODKEY|ShiftMask,	XK_Page_Up,	shifttag,	{ .i = -1 } },
-	{ MODKEY,		XK_Page_Down,	shiftview,	{ .i = +1 } },
-	{ MODKEY|ShiftMask,	XK_Page_Down,	shifttag,	{ .i = +1 } },
-	{ MODKEY,		XK_Insert,	spawn,		SHCMD("notify-send \"üìã Clipboard contents:\" \"$(xclip -o -selection clipboard)\"") },
-
-	/* { MODKEY,		XK_F1,		spawn,		SHCMD("") }, */
-	{ MODKEY,		XK_F2,		spawn,		SHCMD("killall -q dwmblocks; setsid dwmblocks &") },
-	{ MODKEY,		XK_F3,		spawn,		SHCMD("wifi toggle && sleep 10 && pkill -RTMIN+16 dwmblocks") },
-	{ MODKEY|ShiftMask,	XK_F3,		spawn,		SHCMD("bluetooth toggle && pkill -RTMIN+7 dwmblocks") },
-	/* { MODKEY,		XK_F3,		spawn,		SHCMD("") }, */
-	/* { MODKEY,		XK_F4,		spawn,		SHCMD("") }, */
-	/* { MODKEY,		XK_F5,		spawn,		SHCMD("xrdb ~/.config/Xresources") }, */
-	/* { MODKEY|ShiftMask,	XK_F5,		spawn,		SHCMD("xrdb -remove ~/.config/Xresources") }, */
-	/* { MODKEY,		XK_F6,		spawn,		SHCMD("") }, */
-	{ MODKEY,		XK_F7,		spawn,		SHCMD("i3lock -e -f -c 1d2021 -i ~/.config/Icons/lockscreen.png; xset dpms force off") },
-	/* { MODKEY,		XK_F8,		spawn,		SHCMD("") }, */
-	{ MODKEY,		XK_F9,		spawn,		SHCMD("dmenumount") },
-	{ MODKEY,		XK_F10,		spawn,		SHCMD("dmenuumount") },
-	/* { MODKEY,		XK_F11,		spawn,		SHCMD("") }, */
-	{ MODKEY,		XK_F12,		spawn,		SHCMD(TERMINAL " -e sudo nmtui") },
-	/* { MODKEY|ShiftMask,	XK_F12,		xrdb,		{.v = NULL } }, */
-	{ MODKEY,		XK_space,	zoom,		{0} },
-	{ MODKEY|ShiftMask,	XK_space,	togglefloating,	{0} },
-
-	{ 0,			XK_Print,	spawn,		SHCMD("maim F$(date '+%y%m%d-%H%M-%S').png") },
-	{ MODKEY,		XK_Print,	spawn,		SHCMD("maimpick") },
-	/* { MODKEY,		XK_Delete,	togglescratch,	{.ui = 6} }, */
-	/* { MODKEY,		XK_Scroll_Lock,	spawn,		SHCMD("") }, */
-
-	{ 0, XF86XK_AudioMute,		spawn,		SHCMD("pulsemixer --toggle-mute; kill -44 $(pidof dwmblocks)") },
-	{ MODKEY, XF86XK_AudioMute,	togglescratch,	{.ui = 3} },
-	{ 0, XF86XK_AudioRaiseVolume,	spawn,		SHCMD("amixer sset -q Master 5%+; kill -44 $(pidof dwmblocks)") },
-	{ 0, XF86XK_AudioLowerVolume,	spawn,		SHCMD("amixer sset -q Master 5%-; kill -44 $(pidof dwmblocks)") },
-	{ 0, XF86XK_AudioPrev,		spawn,		SHCMD("dmpc prev") },
-	{ 0, XF86XK_AudioNext,		spawn,		SHCMD("dmpc next") },
-	{ 0, XF86XK_AudioPlay,		spawn,		SHCMD("dmpc toggle") },
-	{ MODKEY, XF86XK_AudioPlay,	spawn,		SHCMD("tppctl") },
-	{ MODKEY|ShiftMask, XF86XK_AudioPlay,	spawn,	SHCMD("tppctl; dmpc toggle") },
-	{ 0, XF86XK_AudioStop,		spawn,		SHCMD(TERMINAL " -e pulsemixer; kill -44 $(pidof dwmblocks)") },
-	/* { 0, XF86XK_AudioRewind,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_AudioForward,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_AudioMedia,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_PowerOff,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Calculator,	spawn,		SHCMD("") }, */
-	/* { MODKEY, XF86XK_Calculator,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Sleep,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_WWW,		spawn,		SHCMD("wifi toggle && sleep 10 && pkill -RTMIN+16 dwmblocks") }, */
-	/* { 0, XF86XK_WWAN,		spawn,		SHCMD("wifi toggle && sleep 10 && pkill -RTMIN+16 dwmblocks") }, */
-	/* { 0, XF86XK_DOS,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_ScreenSaver,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_TaskPane,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Mail,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_MyComputer,	spawn,		SHCMD("") }, */
+	/* modifier                     key        function        argument */
+	STACKKEYS(MODKEY,                          focus)
+	STACKKEYS(MODKEY|ShiftMask,                push)
+	/* { MODKEY|ShiftMask,		XK_Escape,	spawn,	SHCMD("") }, */
+	{ MODKEY,			XK_grave,	spawn,	SHCMD("dmenuunicode") },
+	/* { MODKEY|ShiftMask,		XK_grave,	togglescratch,	SHCMD("") }, */
+	TAGKEYS(			XK_1,		0)
+	TAGKEYS(			XK_2,		1)
+	TAGKEYS(			XK_3,		2)
+	TAGKEYS(			XK_4,		3)
+	TAGKEYS(			XK_5,		4)
+	TAGKEYS(			XK_6,		5)
+	TAGKEYS(			XK_7,		6)
+	TAGKEYS(			XK_8,		7)
+	TAGKEYS(			XK_9,		8)
+	{ MODKEY,			XK_0,		view,		{.ui = ~0 } },
+	{ MODKEY|ShiftMask,		XK_0,		tag,		{.ui = ~0 } },
+	{ MODKEY,			XK_minus,	spawn,		SHCMD("pamixer --allow-boost -d 5; kill -44 $(pidof dwmblocks)") },
+	{ MODKEY|ShiftMask,		XK_minus,	spawn,		SHCMD("pamixer --allow-boost -d 15; kill -44 $(pidof dwmblocks)") },
+	{ MODKEY,			XK_equal,	spawn,		SHCMD("pamixer --allow-boost -i 5; kill -44 $(pidof dwmblocks)") },
+	{ MODKEY|ShiftMask,		XK_equal,	spawn,		SHCMD("pamixer --allow-boost -i 15; kill -44 $(pidof dwmblocks)") },
+	{ MODKEY,			XK_BackSpace,	spawn,		SHCMD("sysact") },
+	{ MODKEY|ShiftMask,		XK_BackSpace,	spawn,		SHCMD("sysact") },
+
+	{ MODKEY,			XK_Tab,		view,		{0} },
+	/* { MODKEY|ShiftMask,		XK_Tab,		spawn,		SHCMD("") }, */
+	{ MODKEY,			XK_q,		killclient,	{0} },
+	{ MODKEY|ShiftMask,		XK_q,		spawn,		SHCMD("sysact") },
+	{ MODKEY,			XK_w,		spawn,		SHCMD("$BROWSER") },
+	{ MODKEY|ShiftMask,		XK_w,		spawn,		SHCMD(TERMINAL " -e sudo nmtui") },
+	{ MODKEY,			XK_e,		spawn,		SHCMD(TERMINAL " -e neomutt ; pkill -RTMIN+12 dwmblocks; rmdir ~/.abook") },
+	{ MODKEY|ShiftMask,		XK_e,		spawn,		SHCMD(TERMINAL " -e abook -C ~/.config/abook/abookrc --datafile ~/.config/abook/addressbook") },
+	{ MODKEY,			XK_r,		spawn,		SHCMD(TERMINAL " -e lf") },
+	{ MODKEY|ShiftMask,		XK_r,		spawn,		SHCMD(TERMINAL " -e htop") },
+	{ MODKEY,			XK_t,		setlayout,	{.v = &layouts[0]} }, /* tile */
+	{ MODKEY|ShiftMask,		XK_t,		setlayout,	{.v = &layouts[1]} }, /* bstack */
+	{ MODKEY,			XK_y,		setlayout,	{.v = &layouts[2]} }, /* spiral */
+	{ MODKEY|ShiftMask,		XK_y,		setlayout,	{.v = &layouts[3]} }, /* dwindle */
+	{ MODKEY,			XK_u,		setlayout,	{.v = &layouts[4]} }, /* deck */
+	{ MODKEY|ShiftMask,		XK_u,		setlayout,	{.v = &layouts[5]} }, /* monocle */
+	{ MODKEY,			XK_i,		setlayout,	{.v = &layouts[6]} }, /* centeredmaster */
+	{ MODKEY|ShiftMask,		XK_i,		setlayout,	{.v = &layouts[7]} }, /* centeredfloatingmaster */
+	{ MODKEY,			XK_o,		incnmaster,     {.i = +1 } },
+	{ MODKEY|ShiftMask,		XK_o,		incnmaster,     {.i = -1 } },
+	{ MODKEY,			XK_p,			spawn,		SHCMD("mpc toggle") },
+	{ MODKEY|ShiftMask,		XK_p,			spawn,		SHCMD("mpc pause ; pauseallmpv") },
+	{ MODKEY,			XK_bracketleft,		spawn,		SHCMD("mpc seek -10") },
+	{ MODKEY|ShiftMask,		XK_bracketleft,		spawn,		SHCMD("mpc seek -60") },
+	{ MODKEY,			XK_bracketright,	spawn,		SHCMD("mpc seek +10") },
+	{ MODKEY|ShiftMask,		XK_bracketright,	spawn,		SHCMD("mpc seek +60") },
+	{ MODKEY,			XK_backslash,		view,		{0} },
+	/* { MODKEY|ShiftMask,		XK_backslash,		spawn,		SHCMD("") }, */
+
+	{ MODKEY,			XK_a,		togglegaps,	{0} },
+	{ MODKEY|ShiftMask,		XK_a,		defaultgaps,	{0} },
+	{ MODKEY,			XK_s,		togglesticky,	{0} },
+	/* { MODKEY|ShiftMask,		XK_s,		spawn,		SHCMD("") }, */
+	{ MODKEY,			XK_d,		spawn,          SHCMD("dmenu_run") },
+	{ MODKEY|ShiftMask,		XK_d,		spawn,		SHCMD("passmenu") },
+	{ MODKEY,			XK_f,		togglefullscr,	{0} },
+	{ MODKEY|ShiftMask,		XK_f,		setlayout,	{.v = &layouts[8]} },
+	{ MODKEY,			XK_g,		shiftview,	{ .i = -1 } },
+	{ MODKEY|ShiftMask,		XK_g,		shifttag,	{ .i = -1 } },
+	{ MODKEY,			XK_h,		setmfact,	{.f = -0.05} },
+	/* J and K are automatically bound above in STACKEYS */
+	{ MODKEY,			XK_l,		setmfact,      	{.f = +0.05} },
+	{ MODKEY,			XK_semicolon,	shiftview,	{ .i = 1 } },
+	{ MODKEY|ShiftMask,		XK_semicolon,	shifttag,	{ .i = 1 } },
+	{ MODKEY,			XK_apostrophe,	togglescratch,	{.ui = 1} },
+	/* { MODKEY|ShiftMask,		XK_apostrophe,	spawn,		SHCMD("") }, */
+	{ MODKEY,			XK_Return,	spawn,		{.v = termcmd } },
+	{ MODKEY|ShiftMask,		XK_Return,	togglescratch,	{.ui = 0} },
+
+	{ MODKEY,			XK_z,		incrgaps,	{.i = +3 } },
+	/* { MODKEY|ShiftMask,		XK_z,		spawn,		SHCMD("") }, */
+	{ MODKEY,			XK_x,		incrgaps,	{.i = -3 } },
+	/* { MODKEY|ShiftMask,		XK_x,		spawn,		SHCMD("") }, */
+	/* { MODKEY,			XK_c,		spawn,		SHCMD("") }, */
+	/* { MODKEY|ShiftMask,		XK_c,		spawn,		SHCMD("") }, */
+	/* V is automatically bound above in STACKKEYS */
+	{ MODKEY,			XK_b,		togglebar,	{0} },
+	/* { MODKEY|ShiftMask,		XK_b,		spawn,		SHCMD("") }, */
+	{ MODKEY,			XK_n,		spawn,		SHCMD(TERMINAL " -e nvim -c VimwikiIndex") },
+	{ MODKEY|ShiftMask,		XK_n,		spawn,		SHCMD(TERMINAL " -e newsboat; pkill -RTMIN+6 dwmblocks") },
+	{ MODKEY,			XK_m,		spawn,		SHCMD(TERMINAL " -e ncmpcpp") },
+	{ MODKEY|ShiftMask,		XK_m,		spawn,		SHCMD("pamixer -t; kill -44 $(pidof dwmblocks)") },
+	{ MODKEY,			XK_comma,	spawn,		SHCMD("mpc prev") },
+	{ MODKEY|ShiftMask,		XK_comma,	spawn,		SHCMD("mpc seek 0%") },
+	{ MODKEY,			XK_period,	spawn,		SHCMD("mpc next") },
+	{ MODKEY|ShiftMask,		XK_period,	spawn,		SHCMD("mpc repeat") },
+
+	{ MODKEY,			XK_Left,	focusmon,	{.i = -1 } },
+	{ MODKEY|ShiftMask,		XK_Left,	tagmon,		{.i = -1 } },
+	{ MODKEY,			XK_Right,	focusmon,	{.i = +1 } },
+	{ MODKEY|ShiftMask,		XK_Right,	tagmon,		{.i = +1 } },
+
+	{ MODKEY,			XK_Page_Up,	shiftview,	{ .i = -1 } },
+	{ MODKEY|ShiftMask,		XK_Page_Up,	shifttag,	{ .i = -1 } },
+	{ MODKEY,			XK_Page_Down,	shiftview,	{ .i = +1 } },
+	{ MODKEY|ShiftMask,		XK_Page_Down,	shifttag,	{ .i = +1 } },
+	{ MODKEY,			XK_Insert,	spawn,		SHCMD("xdotool type $(grep -v '^#' ~/.local/share/larbs/snippets | dmenu -i -l 50 | cut -d' ' -f1)") },
+
+	{ MODKEY,			XK_F1,		spawn,		SHCMD("groff -mom /usr/local/share/dwm/larbs.mom -Tpdf | zathura -") },
+	{ MODKEY,			XK_F2,		spawn,		SHCMD("tutorialvids") },
+	{ MODKEY,			XK_F3,		spawn,		SHCMD("displayselect") },
+	{ MODKEY,			XK_F4,		spawn,		SHCMD(TERMINAL " -e pulsemixer; kill -44 $(pidof dwmblocks)") },
+	/* { MODKEY,			XK_F5,		xrdb,		{.v = NULL } }, */
+	{ MODKEY,			XK_F6,		spawn,		SHCMD("torwrap") },
+	{ MODKEY,			XK_F7,		spawn,		SHCMD("td-toggle") },
+	{ MODKEY,			XK_F8,		spawn,		SHCMD("mw -Y") },
+	{ MODKEY,			XK_F9,		spawn,		SHCMD("dmenumount") },
+	{ MODKEY,			XK_F10,		spawn,		SHCMD("dmenuumount") },
+	{ MODKEY,			XK_F11,		spawn,		SHCMD("mpv --no-cache --no-osc --no-input-default-bindings --profile=low-latency --input-conf=/dev/null --title=webcam $(ls /dev/video[0,2,4,6,8] | tail -n 1)") },
+	{ MODKEY,			XK_F12,		spawn,		SHCMD("remaps & notify-send \\\"‚å®Ô∏è Keyboard remapping...\\\" \\\"Re-running keyboard defaults for any newly plugged-in keyboards.\\\"") },
+	{ MODKEY,			XK_space,	zoom,		{0} },
+	{ MODKEY|ShiftMask,		XK_space,	togglefloating,	{0} },
+
+	{ 0,				XK_Print,	spawn,		SHCMD("maim pic-full-$(date '+%y%m%d-%H%M-%S').png") },
+	{ ShiftMask,			XK_Print,	spawn,		SHCMD("maimpick") },
+	{ MODKEY,			XK_Print,	spawn,		SHCMD("dmenurecord") },
+	{ MODKEY|ShiftMask,		XK_Print,	spawn,		SHCMD("dmenurecord kill") },
+	{ MODKEY,			XK_Delete,	spawn,		SHCMD("dmenurecord kill") },
+	{ MODKEY,			XK_Scroll_Lock,	spawn,		SHCMD("killall screenkey || screenkey &") },
+
+	{ 0, XF86XK_AudioMute,		spawn,		SHCMD("pamixer -t; kill -44 $(pidof dwmblocks)") },
+	{ 0, XF86XK_AudioRaiseVolume,	spawn,		SHCMD("pamixer --allow-boost -i 3; kill -44 $(pidof dwmblocks)") },
+	{ 0, XF86XK_AudioLowerVolume,	spawn,		SHCMD("pamixer --allow-boost -d 3; kill -44 $(pidof dwmblocks)") },
+	{ 0, XF86XK_AudioPrev,		spawn,		SHCMD("mpc prev") },
+	{ 0, XF86XK_AudioNext,		spawn,		SHCMD("mpc next") },
+	{ 0, XF86XK_AudioPause,		spawn,		SHCMD("mpc pause") },
+	{ 0, XF86XK_AudioPlay,		spawn,		SHCMD("mpc play") },
+	{ 0, XF86XK_AudioStop,		spawn,		SHCMD("mpc stop") },
+	{ 0, XF86XK_AudioRewind,	spawn,		SHCMD("mpc seek -10") },
+	{ 0, XF86XK_AudioForward,	spawn,		SHCMD("mpc seek +10") },
+	{ 0, XF86XK_AudioMedia,		spawn,		SHCMD(TERMINAL " -e ncmpcpp") },
+	{ 0, XF86XK_AudioMicMute,	spawn,		SHCMD("pactl set-source-mute @DEFAULT_SOURCE@ toggle") },
+	{ 0, XF86XK_PowerOff,		spawn,		SHCMD("sysact") },
+	{ 0, XF86XK_Calculator,		spawn,		SHCMD(TERMINAL " -e bc -l") },
+	{ 0, XF86XK_Sleep,		spawn,		SHCMD("sudo -A zzz") },
+	{ 0, XF86XK_WWW,		spawn,		SHCMD("$BROWSER") },
+	{ 0, XF86XK_DOS,		spawn,		SHCMD(TERMINAL) },
+	{ 0, XF86XK_ScreenSaver,	spawn,		SHCMD("slock & xset dpms force off; mpc pause; pauseallmpv") },
+	{ 0, XF86XK_TaskPane,		spawn,		SHCMD(TERMINAL " -e htop") },
+	{ 0, XF86XK_Mail,		spawn,		SHCMD(TERMINAL " -e neomutt ; pkill -RTMIN+12 dwmblocks") },
+	{ 0, XF86XK_MyComputer,		spawn,		SHCMD(TERMINAL " -e lf /") },
 	/* { 0, XF86XK_Battery,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_HomePage,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Search,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Favorites,	togglescratch,	{.ui = 0 } }, */
-	/* { 0, XF86XK_Launch5,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Launch6,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Launch7,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Launch8,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Launch9,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_Display,		spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_TouchpadToggle,	spawn,		SHCMD("(synclient | grep 'TouchpadOff.*1' && synclient TouchpadOff=0) || synclient TouchpadOff=1") }, */
-	/* { 0, XF86XK_TouchpadOff,	spawn,		SHCMD("") }, */
-	/* { 0, XF86XK_TouchpadOn,	spawn,		SHCMD("") }, */
-	{ 0, XF86XK_MonBrightnessUp,	spawn,		SHCMD("xbacklight -inc 15; pkill -RTMIN+6 dwmblocks") },
-	{ MODKEY, XF86XK_MonBrightnessUp,spawn,		SHCMD("xbacklight -inc 5; pkill -RTMIN+6 dwmblocks") },
-	{ 0, XF86XK_MonBrightnessDown,	spawn,		SHCMD("xbacklight -dec 15; pkill -RTMIN+6 dwmblocks") },
-	{ MODKEY, XF86XK_MonBrightnessDown,spawn,	SHCMD("xbacklight -dec 5; pkill -RTMIN+6 dwmblocks") },
+	{ 0, XF86XK_Launch1,		spawn,		SHCMD("xset dpms force off") },
+	{ 0, XF86XK_TouchpadToggle,	spawn,		SHCMD("(synclient | grep 'TouchpadOff.*1' && synclient TouchpadOff=0) || synclient TouchpadOff=1") },
+	{ 0, XF86XK_TouchpadOff,	spawn,		SHCMD("synclient TouchpadOff=1") },
+	{ 0, XF86XK_TouchpadOn,		spawn,		SHCMD("synclient TouchpadOff=0") },
+	{ 0, XF86XK_MonBrightnessUp,	spawn,		SHCMD("xbacklight -inc 15") },
+	{ 0, XF86XK_MonBrightnessDown,	spawn,		SHCMD("xbacklight -dec 15") },
 
 	/* { MODKEY|Mod4Mask,              XK_h,      incrgaps,       {.i = +1 } }, */
 	/* { MODKEY|Mod4Mask,              XK_l,      incrgaps,       {.i = -1 } }, */
@@ -346,4 +329,3 @@
 	{ ClkTagBar,		0,		Button5,	shiftview,	{.i = 1} },
 	{ ClkRootWin,		0,		Button2,	togglebar,	{0} },
 };
-
